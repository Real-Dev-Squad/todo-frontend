/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as InternalRouteImport } from './routes/_internal'
import { Route as IndexRouteImport } from './routes/index'
import { Route as InternalTeamsRouteImport } from './routes/_internal.teams'
import { Route as InternalDashboardRouteImport } from './routes/_internal.dashboard'
import { Route as InternalAdminRouteImport } from './routes/_internal.admin'
import { Route as InternalTeamsIndexRouteImport } from './routes/_internal.teams.index'
import { Route as InternalTeamsJoinRouteImport } from './routes/_internal.teams.join'
import { Route as InternalTeamsCreateRouteImport } from './routes/_internal.teams.create'
import { Route as InternalTeamsTeamIdRouteImport } from './routes/_internal.teams.$teamId'
import { Route as InternalTeamsTeamIdTodosRouteImport } from './routes/_internal.teams.$teamId.todos'
import { Route as InternalTeamsTeamIdMembersRouteImport } from './routes/_internal.teams.$teamId.members'
import { Route as InternalTeamsTeamIdActivitiesRouteImport } from './routes/_internal.teams.$teamId.activities'

const InternalRoute = InternalRouteImport.update({
  id: '/_internal',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const InternalTeamsRoute = InternalTeamsRouteImport.update({
  id: '/teams',
  path: '/teams',
  getParentRoute: () => InternalRoute,
} as any)
const InternalDashboardRoute = InternalDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => InternalRoute,
} as any)
const InternalAdminRoute = InternalAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => InternalRoute,
} as any)
const InternalTeamsIndexRoute = InternalTeamsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => InternalTeamsRoute,
} as any)
const InternalTeamsJoinRoute = InternalTeamsJoinRouteImport.update({
  id: '/join',
  path: '/join',
  getParentRoute: () => InternalTeamsRoute,
} as any)
const InternalTeamsCreateRoute = InternalTeamsCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => InternalTeamsRoute,
} as any)
const InternalTeamsTeamIdRoute = InternalTeamsTeamIdRouteImport.update({
  id: '/$teamId',
  path: '/$teamId',
  getParentRoute: () => InternalTeamsRoute,
} as any)
const InternalTeamsTeamIdTodosRoute =
  InternalTeamsTeamIdTodosRouteImport.update({
    id: '/todos',
    path: '/todos',
    getParentRoute: () => InternalTeamsTeamIdRoute,
  } as any)
const InternalTeamsTeamIdMembersRoute =
  InternalTeamsTeamIdMembersRouteImport.update({
    id: '/members',
    path: '/members',
    getParentRoute: () => InternalTeamsTeamIdRoute,
  } as any)
const InternalTeamsTeamIdActivitiesRoute =
  InternalTeamsTeamIdActivitiesRouteImport.update({
    id: '/activities',
    path: '/activities',
    getParentRoute: () => InternalTeamsTeamIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof InternalAdminRoute
  '/dashboard': typeof InternalDashboardRoute
  '/teams': typeof InternalTeamsRouteWithChildren
  '/teams/$teamId': typeof InternalTeamsTeamIdRouteWithChildren
  '/teams/create': typeof InternalTeamsCreateRoute
  '/teams/join': typeof InternalTeamsJoinRoute
  '/teams/': typeof InternalTeamsIndexRoute
  '/teams/$teamId/activities': typeof InternalTeamsTeamIdActivitiesRoute
  '/teams/$teamId/members': typeof InternalTeamsTeamIdMembersRoute
  '/teams/$teamId/todos': typeof InternalTeamsTeamIdTodosRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof InternalAdminRoute
  '/dashboard': typeof InternalDashboardRoute
  '/teams/$teamId': typeof InternalTeamsTeamIdRouteWithChildren
  '/teams/create': typeof InternalTeamsCreateRoute
  '/teams/join': typeof InternalTeamsJoinRoute
  '/teams': typeof InternalTeamsIndexRoute
  '/teams/$teamId/activities': typeof InternalTeamsTeamIdActivitiesRoute
  '/teams/$teamId/members': typeof InternalTeamsTeamIdMembersRoute
  '/teams/$teamId/todos': typeof InternalTeamsTeamIdTodosRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_internal': typeof InternalRouteWithChildren
  '/_internal/admin': typeof InternalAdminRoute
  '/_internal/dashboard': typeof InternalDashboardRoute
  '/_internal/teams': typeof InternalTeamsRouteWithChildren
  '/_internal/teams/$teamId': typeof InternalTeamsTeamIdRouteWithChildren
  '/_internal/teams/create': typeof InternalTeamsCreateRoute
  '/_internal/teams/join': typeof InternalTeamsJoinRoute
  '/_internal/teams/': typeof InternalTeamsIndexRoute
  '/_internal/teams/$teamId/activities': typeof InternalTeamsTeamIdActivitiesRoute
  '/_internal/teams/$teamId/members': typeof InternalTeamsTeamIdMembersRoute
  '/_internal/teams/$teamId/todos': typeof InternalTeamsTeamIdTodosRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/dashboard'
    | '/teams'
    | '/teams/$teamId'
    | '/teams/create'
    | '/teams/join'
    | '/teams/'
    | '/teams/$teamId/activities'
    | '/teams/$teamId/members'
    | '/teams/$teamId/todos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/dashboard'
    | '/teams/$teamId'
    | '/teams/create'
    | '/teams/join'
    | '/teams'
    | '/teams/$teamId/activities'
    | '/teams/$teamId/members'
    | '/teams/$teamId/todos'
  id:
    | '__root__'
    | '/'
    | '/_internal'
    | '/_internal/admin'
    | '/_internal/dashboard'
    | '/_internal/teams'
    | '/_internal/teams/$teamId'
    | '/_internal/teams/create'
    | '/_internal/teams/join'
    | '/_internal/teams/'
    | '/_internal/teams/$teamId/activities'
    | '/_internal/teams/$teamId/members'
    | '/_internal/teams/$teamId/todos'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  InternalRoute: typeof InternalRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_internal': {
      id: '/_internal'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof InternalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_internal/teams': {
      id: '/_internal/teams'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof InternalTeamsRouteImport
      parentRoute: typeof InternalRoute
    }
    '/_internal/dashboard': {
      id: '/_internal/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof InternalDashboardRouteImport
      parentRoute: typeof InternalRoute
    }
    '/_internal/admin': {
      id: '/_internal/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof InternalAdminRouteImport
      parentRoute: typeof InternalRoute
    }
    '/_internal/teams/': {
      id: '/_internal/teams/'
      path: '/'
      fullPath: '/teams/'
      preLoaderRoute: typeof InternalTeamsIndexRouteImport
      parentRoute: typeof InternalTeamsRoute
    }
    '/_internal/teams/join': {
      id: '/_internal/teams/join'
      path: '/join'
      fullPath: '/teams/join'
      preLoaderRoute: typeof InternalTeamsJoinRouteImport
      parentRoute: typeof InternalTeamsRoute
    }
    '/_internal/teams/create': {
      id: '/_internal/teams/create'
      path: '/create'
      fullPath: '/teams/create'
      preLoaderRoute: typeof InternalTeamsCreateRouteImport
      parentRoute: typeof InternalTeamsRoute
    }
    '/_internal/teams/$teamId': {
      id: '/_internal/teams/$teamId'
      path: '/$teamId'
      fullPath: '/teams/$teamId'
      preLoaderRoute: typeof InternalTeamsTeamIdRouteImport
      parentRoute: typeof InternalTeamsRoute
    }
    '/_internal/teams/$teamId/todos': {
      id: '/_internal/teams/$teamId/todos'
      path: '/todos'
      fullPath: '/teams/$teamId/todos'
      preLoaderRoute: typeof InternalTeamsTeamIdTodosRouteImport
      parentRoute: typeof InternalTeamsTeamIdRoute
    }
    '/_internal/teams/$teamId/members': {
      id: '/_internal/teams/$teamId/members'
      path: '/members'
      fullPath: '/teams/$teamId/members'
      preLoaderRoute: typeof InternalTeamsTeamIdMembersRouteImport
      parentRoute: typeof InternalTeamsTeamIdRoute
    }
    '/_internal/teams/$teamId/activities': {
      id: '/_internal/teams/$teamId/activities'
      path: '/activities'
      fullPath: '/teams/$teamId/activities'
      preLoaderRoute: typeof InternalTeamsTeamIdActivitiesRouteImport
      parentRoute: typeof InternalTeamsTeamIdRoute
    }
  }
}

interface InternalTeamsTeamIdRouteChildren {
  InternalTeamsTeamIdActivitiesRoute: typeof InternalTeamsTeamIdActivitiesRoute
  InternalTeamsTeamIdMembersRoute: typeof InternalTeamsTeamIdMembersRoute
  InternalTeamsTeamIdTodosRoute: typeof InternalTeamsTeamIdTodosRoute
}

const InternalTeamsTeamIdRouteChildren: InternalTeamsTeamIdRouteChildren = {
  InternalTeamsTeamIdActivitiesRoute: InternalTeamsTeamIdActivitiesRoute,
  InternalTeamsTeamIdMembersRoute: InternalTeamsTeamIdMembersRoute,
  InternalTeamsTeamIdTodosRoute: InternalTeamsTeamIdTodosRoute,
}

const InternalTeamsTeamIdRouteWithChildren =
  InternalTeamsTeamIdRoute._addFileChildren(InternalTeamsTeamIdRouteChildren)

interface InternalTeamsRouteChildren {
  InternalTeamsTeamIdRoute: typeof InternalTeamsTeamIdRouteWithChildren
  InternalTeamsCreateRoute: typeof InternalTeamsCreateRoute
  InternalTeamsJoinRoute: typeof InternalTeamsJoinRoute
  InternalTeamsIndexRoute: typeof InternalTeamsIndexRoute
}

const InternalTeamsRouteChildren: InternalTeamsRouteChildren = {
  InternalTeamsTeamIdRoute: InternalTeamsTeamIdRouteWithChildren,
  InternalTeamsCreateRoute: InternalTeamsCreateRoute,
  InternalTeamsJoinRoute: InternalTeamsJoinRoute,
  InternalTeamsIndexRoute: InternalTeamsIndexRoute,
}

const InternalTeamsRouteWithChildren = InternalTeamsRoute._addFileChildren(
  InternalTeamsRouteChildren,
)

interface InternalRouteChildren {
  InternalAdminRoute: typeof InternalAdminRoute
  InternalDashboardRoute: typeof InternalDashboardRoute
  InternalTeamsRoute: typeof InternalTeamsRouteWithChildren
}

const InternalRouteChildren: InternalRouteChildren = {
  InternalAdminRoute: InternalAdminRoute,
  InternalDashboardRoute: InternalDashboardRoute,
  InternalTeamsRoute: InternalTeamsRouteWithChildren,
}

const InternalRouteWithChildren = InternalRoute._addFileChildren(
  InternalRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  InternalRoute: InternalRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
